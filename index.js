require('dotenv').config();
const fs = require('fs')
const path = require('path');
const axios = require('axios');
const TelegramBot = require('node-telegram-bot-api');
const { v4: uuidv4 } = require('uuid');
const express = require('express');

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN; // –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const SHOP_ID = process.env.SHOP_ID; // ID –º–∞–≥–∞–∑–∏–Ω–∞ –≤ –ÆKassa
const API_KEY = process.env.API_KEY; // –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á API –ÆKassa
const CHANNEL_ID = process.env.CHANNEL_ID; // Username –∏–ª–∏ —á–∏—Å–ª–æ–≤–æ–π ID –∫–∞–Ω–∞–ª–∞
const returnUrl = 'https://t.me/BlogGidBot'; // URL –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ –ÆKassa
async function createPayment(chatId, amount, description) {
    const url = 'https://api.yookassa.ru/v3/payments';
    const idempotenceKey = uuidv4(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏

    const headers = {
        'Content-Type': 'application/json',
        'Authorization': `Basic ${Buffer.from(`${SHOP_ID}:${API_KEY}`).toString('base64')}`,
        'Idempotence-Key': idempotenceKey // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    };

    const payload = {
        amount: {
            value: amount,
            currency: "RUB"
        },
        confirmation: {
            type: "redirect",
               return_url: returnUrl // URL –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
        },
        capture: true,
        description: description,
        metadata: {
            chat_id: chatId // –°–æ—Ö—Ä–∞–Ω—è–µ–º chatId –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        }
    };

    try {
        const response = await axios.post(url, payload, { headers });

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º HTTP-—Å—Ç–∞—Ç—É—Å –∏ —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞
        if (response.status === 200) {
            const paymentData = response.data;

            // –£—Å–ø–µ—à–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
            if (paymentData.status === "succeeded") {
                console.log("–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:", paymentData);
                return paymentData;
            }

            // –û–ø–µ—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            if (paymentData.status === "pending") {
                console.log("–û–ø–µ—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –ñ–¥–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.");
                return paymentData;
            }

            // –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞
            if (paymentData.status === "canceled") {
                console.error("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞:", paymentData.cancellation_details || "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞");
                throw new Error("–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
            }

            // –î—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—É—Å—ã
            console.log("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞:", paymentData.status);
            return paymentData;
        } else {
            console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π HTTP-—Å—Ç–∞—Ç—É—Å:", response.status, response.data);
            throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞.");
        }
    } catch (error) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        if (error.response) {
            const { status, data } = error.response;

            // –û—à–∏–±–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ (4xx)
            if (status >= 400 && status < 500) {
                console.error("–û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞:", status, data.description || data);
                throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: ${data.description || "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞"}`);
            }

            // –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (500)
            if (status === 500) {
                console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (500). –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.");
                throw new Error("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
            }

            // –î—Ä—É–≥–∏–µ HTTP-–æ—à–∏–±–∫–∏
            console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", status, data);
            throw new Error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞.");
        } else {
            // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
            console.error("–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:", error.message);
            throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ÆKassa. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.");
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞
async function isUserInChannel(chatId, userId) {
    try {
        const member = await bot.getChatMember(CHANNEL_ID, userId);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–∞
        return ['member', 'administrator', 'creator'].includes(member.status);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–∞–Ω–∞–ª–∞:', error.message);
        return false;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const userName = msg.from.first_name || '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å'; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ "–î—Ä—É–≥", –µ—Å–ª–∏ –∏–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞
    const isMember = await isUserInChannel(chatId, userId);

    if (isMember) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–∞–Ω–∞–ª–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª
        const inviteLink = await bot.exportChatInviteLink(CHANNEL_ID);

        bot.sendMessage(chatId, `
${userName}, –≤—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞! ‚úÖ

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª:
            `, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url: inviteLink }]
                ]
            }
        });
        return;
    }

    try {
        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        const paymentData = await createPayment(chatId, "100.00", "–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É");

        // –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        const welcomeMessage = `
${userName} üëã

–û—Ç –∏–¥–µ–∏ –¥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É ¬´–û—Ç –∏–¥–µ–∏ –¥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏¬ª, –ø–æ—Å–≤—è—â–µ–Ω–Ω–æ–º—É –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é –±–ª–æ–≥–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏—é —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Å–≤–æ–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∏–¥–µ–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, –∏–∑—É—á–∏—Ç—å —Å–µ–∫—Ä–µ—Ç—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏ –Ω–∞–ª–∞–¥–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –±—Ä–µ–Ω–¥–∞–º–∏, –≤—ã –ø–æ–ø–∞–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É.

–ö–∞–Ω–∞–ª —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ –º–∏—Ä–µ –±–ª–æ–≥–∏–Ω–≥–∞.

–í –Ω–µ–º —è –±—É–¥—É –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è, —É—Å–ø–µ—à–Ω—ã–º–∏ –∫–µ–π—Å–∞–º–∏ –∏ –º–Ω–æ–≥–∏–º–∏ –¥—Ä—É–≥–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –∏ —Ä–∞–∑–≤–∏—Ç—å –≤–∞—à –±–ª–æ–≥.

–ï—Å–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ –∫–∞–∫–∏–µ —Ç–µ–º—ã –º—ã –∑–∞—Ç—Ä–æ–Ω–µ–º: 
- –ö–∞–∫ —Å–¥–≤–∏–Ω—É—Ç—å —Å–≤–æ–π –±–ª–æ–≥ —Å –º–µ—Ä—Ç–≤–æ–π —Ç–æ—á–∫–∏ 
- –ö–∞–∫ –Ω–∞—á–∞—Ç—å –Ω–∞–±–∏—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–∏–µ –æ—Ö–≤–∞—Ç—ã –∏ –Ω–æ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é 
- –ö–∞–∫ –≤—ã–π—Ç–∏ –Ω–∞ –±–∞—Ä—Ç–µ—Ä–Ω–æ–µ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –±—Ä–µ–Ω–¥–∞–º–∏ 
- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –∫–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç 
- –ü–æ–¥–±–æ—Ä–∫–∏ –∏–¥–µ–π –¥–ª—è —Ä–∏–ª—Å –∫–æ—Ç–æ—Ä—ã–µ –≤ —Ç—Ä–µ–Ω–¥–µ 
- –ú–æ–Ω—Ç–∞–∂, –æ–±—Ä–∞–±–æ—Ç–∫–∞, —à—Ä–∏—Ñ—Ç—ã, –º—É–∑—ã–∫–∞, —Å—Ç–∏–∫–µ—Ä—ã, –ø—Ä–µ—Å–µ—Ç—ã, –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ 
- –ö–∞–∫–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º —è –ø–æ–ª—å–∑—É—é—Å—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚ù§Ô∏è‚Äçüî•
- –ú–æ–π –æ–ø—ã—Ç, –º–æ—ë –º–Ω–µ–Ω–∏–µ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç 
- –†–∞–∑–±–æ—Ä –æ—à–∏–±–æ–∫ –≤ –±–ª–æ–≥–∞—Ö 
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å 

–û—Ñ–æ—Ä–º–ª—è–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∏ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö –ª—é–¥–µ–π.
‚Äî –æ—Ç –∏–¥–µ–∏ –¥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏!

üî∏ –¥–æ—Å—Ç—É–ø: –ù–ê–í–°–ï–ì–î–ê 
üî∏ —Ñ–æ—Ä–º–∞—Ç: –ø–æ–¥–∫–∞—Å—Ç—ã, —Å—Ç–∞—Ç—å–∏, —É—Ä–æ–∫–∏
`;

        // –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const imagePath = path.join(__dirname, 'preview.jpg');

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await bot.sendPhoto(chatId, fs.createReadStream(imagePath), { contentType: 'image/jpeg' } );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
        bot.sendMessage(chatId, welcomeMessage, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: "–û–ø–ª–∞—Ç–∏—Ç—å 100‚ÇΩ", url: paymentData.confirmation.confirmation_url }]
                ]
            }
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:", error.message);
        bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
});

const app = express();
app.use(express.json());

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
app.get('/', (req, res) => {
    res.send('–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ');
});

// Webhook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –ÆKassa

app.post('/webhook', async (req, res) => {
    const event = req.body;

    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –æ—Ç –ÆKassa
    console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –ÆKassa:", JSON.stringify(event, null, 2));

    try {
        if (event.event === "payment.succeeded") {
            const chatId = event.object?.metadata?.chat_id;

            console.log("üÜî –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π chat_id –∏–∑ webhook:", chatId);

            if (!chatId) {
                console.error("‚ùå chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ metadata!");
                return res.sendStatus(400);
            }

            // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            try {
                const userInfo = await bot.getChat(chatId);
                console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:", userInfo.username || userInfo.first_name || "–ë–µ–∑ –∏–º–µ–Ω–∏");

                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
                const inviteLink = await bot.exportChatInviteLink(CHANNEL_ID);
                console.log("üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞:", inviteLink);

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.sendMessage(chatId, "üéâ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª:", {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url: inviteLink }]
                        ]
                    }
                });

                console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Telegram API:", error.message);
                return res.status(400).send("–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ chat_id –∏–ª–∏ Telegram API");
            }

        } else if (event.event === "payment.waiting_for_capture") {
            console.log("‚è≥ –ü–ª–∞—Ç—ë–∂ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:", event.object.id);
        } else if (event.event === "payment.canceled") {
            console.log("‚ùå –ü–ª–∞—Ç—ë–∂ –æ—Ç–º–µ–Ω—ë–Ω:", event.object.id);
        } else {
            console.log("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ:", event.event);
        }

        res.sendStatus(200);
    } catch (error) {
        console.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:", error.message);
        res.sendStatus(500);
    }
});


// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(3000, () => {
    console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
});